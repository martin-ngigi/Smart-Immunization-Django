1.SETTING UP 
1.1 create a virtual environment named .venv based on your current interpreter:
    # Linux
    sudo apt-get install python3-venv    # If needed
    python3 -m venv .venv
    source .venv/bin/activate

    # macOS
    python3 -m venv .venv
    source .venv/bin/activate

    # Windows
    py -3 -m venv .venv
    .venv\scripts\activate

1.2 Activate virtual environment:
    .venv\Scripts\Activate 

1.2 Open the project folder in VS Code by running code ., or by running VS Code and using the File > Open Folder command.
1.3 In VS Code, open the Command Palette (View > Command Palette or (Ctrl+Shift+P)). Then select the Python: Select Interpreter command:
1.4 The command presents a list of available interpreters that VS Code can locate automatically (your list will vary; if you don't see the desired interpreter, see Configuring Python environments). From the list, select the virtual environment in your project folder that starts with ./.venv or .\.venv:

1.5 Update pip in the virtual environment by running the following command in the VS Code Terminal:
    python -m pip install --upgrade pip

1.6 Install Django in the virtual environment by running the following command in the VS Code Terminal:
    python -m pip install django



2.CREATING AND RUNNING DJANGO PROJECT
2.1 Create the Django project
In the VS Code Terminal where your virtual environment is activated, run the following command:
    django-admin startproject mongo_django_project

2.2 Create an empty development database by running the following command:
    python manage.py migrate

navigate to mongo_django_project by typing:
    cd mongo_django_project
2.3 To verify the Django project, make sure your virtual environment is activated, then start Django's development server using the command:
     python manage.py runserver

2.4 Ctrl+click the http://127.0.0.1:8000/ URL in the terminal output window to open your default browser to that address.


3. CREATING DJANGO APP
3.1 In the VS Code Terminal with your virtual environment activated, run the administrative utility's startapp command in your project folder (where manage.py resides):
    python manage.py startapp mongo_django_app

4. INSTALLATIONS
Instructions
--------------
1. pip install django
2. pip install djongo
3. pip install pytz
4. pip install dnspython
5. pip install pymongo==3.12.3

EMAIL IS: profwainaina
Create database in mongodb named  : smart-immunization-db
Create collection in mongodb named : smart-immunization-collection

Create a user name: wainaina
Add password : 1234


ERRORS TO EXPECT:
1. django.core.exceptions.ImproperlyConfigured: 'djongo' isn't an available database backend or couldn't be imported. Check the above 
exception. To use one of the built-in backends, use 'django.db.backends.XXX', where XXX is one of:
    'mysql', 'oracle', 'postgresql', 'sqlite3'

1.1 To solve above error :
    pip install pytz




Make migrations:
    python manage.py makemigrations 
    python manage.py migrate

CRUD OPERATIONS
1. Install django-rest-framework by running:
    pip install django-rest-framework
2. Add the module 'rest_framework" in installed apps in settings.py.
3. Now, we will create new app inside django project by typing this command:
    cd .\mongo_django_project\
    python manage.py startapp api
4. Add the apps inside settings.py > installed apps. 'api'
5. Create urls.py file inside api folder and include that urls.py file in your django project root urls.



CRUD OPERATIONS:
CREATE USER
---------------
First makesure server is running by typing:
    python manage.py runserver

POST-> Create or insert afresh:
    in postman, select POST
    then paste : http://127.0.0.1:8000/accounts/users/ as your endpoint.
    then in the body select row, then select in the text, select JSON
    and paste the following:
        {
            "firstName":"Ken",
            "lastName":"Wainaina",
            "email":"ken@gmail.com",
            "phone":"0712345678",
            "password":"1234",
            "username":"ken"
        }
    Then click POST

GET -> Retrieve all data 
    then paste : http://127.0.0.1:8000/accounts/users/ as your endpoint.
    Then select GET

GET - > Retreive one data item by id
    paste http://127.0.0.1:8000/accounts/users/2/ as endpoint

PUT -> Update one by ID
    paste http://127.0.0.1:8000/accounts/users/2/ as end point then GET
    paste the following in the body after selecting raw and in the text select json ... then paste
        {
            "firstName":"Ken",
            "lastName":"Wainaina",
            "email":"ken@gmail.com",
            "phone":"0712345678",
            "password":"1234",
            "username":"ken"
        }

    Then click PUT

DELETE -> 
    http://127.0.0.1:8000/accounts/users/2/ as endpoint, Then click delete



CREATE IMMUNIZATION
---------------
First makesure server is running by typing:
    python manage.py runserver

POST-> Create or insert afresh:
    in postman, select POST
    then paste : http://127.0.0.1:8000/immunization/ as your endpoint.
    then in the body select row, then select in the text, select JSON
    and paste the following:
        {
            "firstName":"Ken",
            "lastName":"Wainaina",
            "email":"ken@gmail.com",
            "phone":"0712345678",
            "age":"22",
            "nationId":99676545,
            "immunizationName":"JonsonAndJonson",
            "immunizationDosageLevel": "1",
            "immunizationDate":"23-11-2022",
            "nextImmunizationDate":"23-11-2023",
            "county":"Kiambu"
        }
    Then click POST

GET -> Retrieve all data 
    then paste : http://127.0.0.1:8000/immunization/ as your endpoint.
    Then select GET

GET - > Retreive one data item by email
    paste http://127.0.0.1:8000/immunization/ as endpoint

PUT -> Update one by email
    paste http://127.0.0.1:8000/immunization/ as end point then GET
    paste the following in the body after selecting raw and in the text select json ... then paste
        {
            "firstName":"Ken",
            "lastName":"Wainaina",
            "email":"ken@gmail.com",
            "phone":"0712345678",
            "age":"22",
            "nationId":99676545,
            "immunizationName":"JonsonAndJonson",
            "immunizationDosageLevel": "1",
            "immunizationDate":"23-11-2022",
            "nextImmunizationDate":"23-11-2023",
            "county":"Kiambu"
        }

    Then click PUT

DELETE -> 
    http://127.0.0.1:8000/immunization/ as endpoint, Then click delete


